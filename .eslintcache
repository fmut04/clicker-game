[{"C:\\Users\\F709\\card-clicker\\src\\index.js":"1","C:\\Users\\F709\\card-clicker\\src\\App.js":"2","C:\\Users\\F709\\card-clicker\\src\\Money.js":"3","C:\\Users\\F709\\card-clicker\\src\\Upgrades.js":"4","C:\\Users\\F709\\card-clicker\\src\\Wallet.js":"5","C:\\Users\\F709\\card-clicker\\src\\Login.js":"6"},{"size":219,"mtime":1612136161845,"results":"7","hashOfConfig":"8"},{"size":5617,"mtime":1615663616745,"results":"9","hashOfConfig":"8"},{"size":127,"mtime":1612149094041,"results":"10","hashOfConfig":"8"},{"size":791,"mtime":1615224160357,"results":"11","hashOfConfig":"8"},{"size":901,"mtime":1614545771535,"results":"12","hashOfConfig":"8"},{"size":2055,"mtime":1615667124944,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1m31bzy",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\F709\\card-clicker\\src\\index.js",[],["29","30"],"C:\\Users\\F709\\card-clicker\\src\\App.js",["31"],"import React from \"react\";\nimport Wallet from \"./Wallet\";\nimport Upgrades from \"./Upgrades\";\nimport Login from \"./Login\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      luck: 1,\n      clicked: false,\n      clickSpeed: 1000,\n      totalMoney: 0,\n    };\n  }\n  render() {\n    return (\n      <div id=\"body\">\n        <div className=\"gridDiv\" id=\"centerDiv\">\n          <h1>Money: {this.state.totalMoney}</h1>\n          <Wallet\n            clicked={this.state.clicked}\n            packClick={() => this.handleWalletClick()}\n            clickSpeed={this.state.clickSpeed}\n          />\n        </div>\n        <div className=\"gridDiv\" id=\"rightDiv\">\n          <h1>Upgrades</h1>\n          <Upgrades\n            text=\"Click Speed\"\n            task=\"upgradeClickSpeed\"\n            upgradesClick={(cost) => this.handleClickSpeedUpgrade(cost)}\n          />\n\n          <Upgrades\n            text=\"Luck\"\n            task=\"upgradeLuck\"\n            upgradesClick={(cost) => this.handleLuckUpgrade(cost)}\n          />\n\n          <Upgrades\n            text=\"Money Count\"\n            task=\"upgradeMoneyCount\"\n            upgradesClick={(cost) => this.handleMoneyCountUpgrade(cost)}\n          />\n        </div>\n        <Login\n          getGameInfo={this.getGameInfo()}\n          setGameInfo={(info) => this.setGameInfo(info)}\n        />\n        <div id=\"billsDiv\">\n          <img\n            className=\"bill\"\n            src={process.env.PUBLIC_URL + \"/bills/bill-1.png\"}\n            alt=\"money failed\"\n          ></img>\n        </div>\n      </div>\n    );\n  }\n\n  handleWalletClick() {\n    var moneyArr = document.getElementsByClassName(\"bill\");\n    var moneySum = 0;\n    for (var i = 0; i < moneyArr.length; i++) {\n      var moneyValue = this.getMoneyValue();\n      moneyArr[i].src =\n        process.env.PUBLIC_URL + \"/bills/bill-\" + moneyValue + \".png\";\n      moneySum += moneyValue;\n    }\n\n    setTimeout(() => {\n      this.setState({\n        totalMoney: this.state.totalMoney + moneySum,\n        clicked: false,\n      });\n    }, this.state.clickSpeed);\n\n    this.handleMoneyAnimation(moneyArr);\n  }\n\n  handleMoneyAnimation(moneyArr) {\n    var topPercent = 40,\n      yDir = -1,\n      xDirsArr = [];\n\n    for (var i = 0; i < moneyArr.length; i++) {\n      xDirsArr.push(Math.random() * 2 - 1);\n      moneyArr[i].style.left = 40 + \"%\";\n    }\n    var animateId = setInterval(() => {\n      if (topPercent < 10) {\n        yDir *= -1;\n        for (var i = 0; i < xDirsArr.length; i++) {\n          xDirsArr[i] *= -1;\n        }\n      }\n\n      topPercent += yDir;\n\n      //Faces money in dir its pointing\n      //Looks a little weird it can be improved\n      // var angle = (Math.atan2(yDir, xDir) * 180) / Math.PI;\n      // money.style.transform = \"rotate(\" + angle + \"deg)\";\n      for (var i = 0; i < moneyArr.length; i++) {\n        moneyArr[i].style.top = topPercent + \"%\";\n        moneyArr[i].style.left =\n          xDirsArr[i] + parseFloat(moneyArr[i].style.left) + \"%\";\n      }\n\n      if (topPercent > 40) clearInterval(animateId);\n    }, this.state.clickSpeed / 80);\n    this.setState({ clicked: true });\n  }\n\n  getMoneyValue() {\n    var rand = Math.floor(Math.random() * 100) + this.state.luck;\n    if (rand > 95) rand = 100;\n    else if (rand > 85) rand = 50;\n    else if (rand > 70) rand = 20;\n    else if (rand > 50) rand = 10;\n    else if (rand > 25) rand = 5;\n    else rand = 1;\n\n    return rand;\n  }\n\n  //Returns true if upgrade completed\n  //returns maxed if max upgrade level reached\n  //returns false if not enough money for purchase\n\n  handleClickSpeedUpgrade(cost) {\n    if (this.state.clickSpeed > 500 && this.state.totalMoney - cost >= 0) {\n      this.setState({\n        clickSpeed: this.state.clickSpeed - 200,\n        totalMoney: this.state.totalMoney - cost,\n      });\n      return true;\n    } else if (this.state.clickSpeed < 500) {\n      this.setState({ clickSpeed: 500 });\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n\n  handleLuckUpgrade(cost) {\n    if (this.state.luck <= 20 && this.state.totalMoney - cost >= 0) {\n      this.setState({\n        totalMoney: this.state.totalMoney - cost,\n        luck: this.state.luck + 2,\n      });\n      return true;\n    } else if (this.state.luck > 20) {\n      this.setState({ luck: 20 });\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n\n  handleMoneyCountUpgrade(cost) {\n    if (\n      document.getElementsByClassName(\"bill\").length < 5 &&\n      this.state.totalMoney - cost >= 0\n    ) {\n      this.addMoney();\n      this.setState({\n        totalMoney: this.state.totalMoney - cost,\n      });\n      return true;\n    } else if (document.getElementsByClassName(\"bill\").length >= 5) {\n      return \"Maxed\";\n    } else {\n      return false;\n    }\n  }\n\n  addMoney() {\n    var newBill = document.createElement(\"img\");\n    newBill.src = process.env.PUBLIC_URL + \"/bills/bill-1.png\";\n    document.getElementById(\"body\").appendChild(newBill);\n    newBill.className = \"bill\";\n  }\n\n  getGameInfo() {\n    return {\n      totalMoney: this.state.totalMoney,\n      clickSpeed: this.state.clickSpeed,\n      luck: this.state.luck,\n      moneyCount: document.getElementsByClassName(\"bill\").length,\n    };\n  }\n\n  setGameInfo(information) {\n    this.setState({\n      totalMoney: information.totalMoney,\n      clickSpeed: information.clickSpeed,\n      luck: information.luck,\n      moneyCount: information.moneyCount + 1,\n    });\n\n    var bills = document.getElementsByClassName(\"bill\");\n    while (bills.length > this.state.moneyCount) {\n      bills[bills.length - 1].remove();\n    }\n  }\n}\n\nexport default App;\n","C:\\Users\\F709\\card-clicker\\src\\Money.js",["32"],"C:\\Users\\F709\\card-clicker\\src\\Upgrades.js",[],"C:\\Users\\F709\\card-clicker\\src\\Wallet.js",["33","34"],"import React, { useState, useEffect } from \"react\";\n\nfunction Wallet({ clicked, packClick, clickSpeed }) {\n  // const [frameNumber, setFrameNumber] = useState(0);\n  // const [animate, setAnimate] = useState(false);\n  //\n  // useEffect(() => {\n  //   if (animate) {\n  //     const animation = setInterval(() => {\n  //       if (frameNumber < 5) setFrameNumber(frameNumber + 1);\n  //       else {\n  //         setAnimate(false);\n  //         setTimeout(() => setFrameNumber(0), clickSpeed + 500);\n  //       }\n  //     }, clickSpeed / 6);\n  //     return () => clearInterval(animation);\n  //   }\n  // });\n\n  return (\n    <>\n      <img\n        id=\"wallet\"\n        src={process.env.PUBLIC_URL + \"/wallet/Wallet-0.png\"}\n        alt=\"broken img\"\n        onClick={() => {\n          if (clicked === false) {\n            packClick();\n          }\n        }}\n      ></img>\n    </>\n  );\n}\n\nexport default Wallet;\n","C:\\Users\\F709\\card-clicker\\src\\Login.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":104,"column":16,"nodeType":"41","messageId":"42","endLine":104,"endColumn":17},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"41","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"44","line":1,"column":17,"nodeType":"41","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"43","severity":1,"message":"46","line":1,"column":27,"nodeType":"41","messageId":"45","endLine":1,"endColumn":36},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-redeclare","'i' is already defined.","Identifier","redeclared","no-unused-vars","'useState' is defined but never used.","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]